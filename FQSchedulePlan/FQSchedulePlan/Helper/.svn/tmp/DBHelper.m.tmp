
//
//  Created by 单启志 on 2017/3/8.
//  Copyright © 2017年 MRH. All rights reserved.
//

#import "DBHelper.h"

#import "FMDatabase.h"
#import "FMDatabaseQueue.h"
#import "FMDatabaseAdditions.h"


//数据库
#define FQDBName @"/watchFQ.db"
//表名
#define tableName @"watch"

@interface DBHelper()

@property(nonatomic,strong)FMDatabase *db;
@property(nonatomic,strong)FMDatabaseQueue *queue;

@end

@implementation DBHelper


+(instancetype)share{

    static DBHelper *dbHelper;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        dbHelper=[[self alloc]init];
    });
    return dbHelper;
}

-(FMDatabaseQueue *)queue{

    NSString *doc=[NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)lastObject];
    NSString *path=[doc stringByAppendingString:FQDBName];

    NSFileManager *fileManager = [NSFileManager defaultManager];
    //判断文件是否已经在沙盒中已经存在
    BOOL result = [fileManager fileExistsAtPath:path];

    if (!_queue||!result) {

        NSLog(@"%@",path);
        _queue=[FMDatabaseQueue databaseQueueWithPath:path];

        [_queue inDatabase:^(FMDatabase *db) {

            NSString *sql=[NSString stringWithFormat:@"create table if not exists %@ (id integer primary key autoincrement,%@ text,%@ text,%@ text,%@ text,%@ text,%@ text)",tableName,DBDeviceId,DBZuoXiPlan,DBWatchFee,DBWatchBook,DBMessageLog,DBHealthStep];
            BOOL createTableResult=[db executeUpdate:sql];
            if (createTableResult) {
                NSLog(@"创建表成功");
            }else{
                NSLog(@"创建表失败");
            }
        }];
    }
    return _queue;
}

//

/**
 往表中中插入一列
 @param columnName 表的字段名
 */
-(void)addColumnToWatchTableWith:(NSString*)columnName{


    [self.queue inDatabase:^(FMDatabase *db) {

       BOOL isExists=[db columnExists:columnName inTableWithName:tableName];
        if (!isExists) {

            NSString *sql=[NSString stringWithFormat:@"alter table %@ add %@ text",tableName,columnName];
            BOOL isSuccess=[db executeUpdate:sql];
            isSuccess?NSLog(@"插入字段成功"):NSLog(@"插入字段失败");
        }else{

            NSLog(@"该字段已存在");
        }

    }];

}

//初始化表(清空表里面的所有数据)
-(void)initTable{

    [self.queue inDatabase:^(FMDatabase *db) {

       BOOL isclear=[db executeUpdate:@"drop table if exists watch"];

        NSString *sql=[NSString stringWithFormat:@"create table if not exists %@ (id integer primary key autoincrement,%@ text,%@ text,%@ text,%@ text,%@ text,%@ text)",tableName,DBDeviceId,DBZuoXiPlan,DBWatchFee,DBWatchBook,DBMessageLog,DBHealthStep];
       BOOL iscreate=[db executeUpdate:sql];
        if (isclear && iscreate) {
            NSLog(@"初始化表成功");
        }else{

            NSLog(@"初始化表失败");
        }

    }];
}


/**
 插入（只有在新增设备的时候是插入一条数据，其余情况下全是update）

 @param deviceId 设备Id
 */
-(void)insertDataWithDeviceId:(NSString*)deviceId{

    [self.queue inDatabase:^(FMDatabase *db) {

      FMResultSet *result=[db executeQuery:@"select count(*) from watch where deviceId=?",deviceId];

        if ([result next]) {
          NSInteger count=[result intForColumnIndex:0];

            if (count>0) {
                NSLog(@"该设备已存在");
                return;
            }
        }

      BOOL isSuccess=[db executeUpdate:@"insert into watch(deviceId)values(?)",deviceId];

        isSuccess?NSLog(@"插入数据成功"):NSLog(@"插入数据失败");
    }];

}

/**
 删除掉某个设备

 @param deviceId 设备id
 */
-(void)deleteWithDeviceId:(NSString*)deviceId{

    [self.queue inDatabase:^(FMDatabase *db) {

       BOOL isSuccess=[db executeUpdate:@"delete from watch where deviceId=?",deviceId];
        isSuccess?NSLog(@"删除设备成功"):NSLog(@"删除设备失败");
    }];
}

/**
 查询表对应的数据

 @param columnName 字段名（对应界面的数据）
 @param deviceId   设备Id

 @return 数组(无值返回空数组)
 */
-(NSMutableArray*)getDateWithColumnName:(NSString*)columnName deviceId:(NSString*)deviceId{

    //还没该手表记录的时候插入一条记录，有则不插入
    [self insertDataWithDeviceId:deviceId];
     //该表中没有改字段的时候插入columnName字段，有则不插入
    [self addColumnToWatchTableWith:columnName];
    
    __block NSString *str;
    [self.queue inDatabase:^(FMDatabase *db) {
        FMResultSet *result=[db executeQuery:@"select * from watch where deviceId=?",deviceId];

        if ([result next]) {
            str=[result stringForColumn:columnName];
        }
        //[result close];
    }];

<<<<<<< .mine
    if (str.isNullStr) {
=======
    if (str) {
>>>>>>> .r94
        NSData *data=[str dataUsingEncoding:NSUTF8StringEncoding];

        NSArray *a=[NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
        return a.mutableCopy;
    }else{
        return [NSMutableArray array];
    }
}

/**
 最新版增删改 #####五星推荐#####

 @param ID          需要修改的Id 新增传nil
 @param columnName  哪个字段
 @param deviceId    设备ID
 @param editType    0 增 1 删 2 改 3数据库只保留一条数据
 @param dic         修改后的数据(字典)，删除传nil

 @return Yes成功 No失败
 */
-(BOOL)updateDataWithId:(NSString*)ID ColumnName:(NSString*)columnName deviceId:(NSString*)deviceId updateType:(updateType)updateType data:(id)dic{

    __block BOOL result;

    //还没该手表记录的时候插入一条记录，有则不插入
    [self insertDataWithDeviceId:deviceId];

    //该表中没有改字段的时候插入columnName字段，有则不插入
    [self addColumnToWatchTableWith:columnName];

    __block NSMutableArray *arr=[[DBHelper share]getDateWithColumnName:columnName deviceId:deviceId];
    [self.queue inDatabase:^(FMDatabase *db) {

        if (updateType==updateTypeAdd) {//增
            if ([dic isKindOfClass:[NSArray class]]) {
                //离线过来的数据可能是一个数组
                NSArray *subArr=[dic array];
                for (int i=0; i<subArr.count; i++) {
                    [arr addObject:dic[i]];
                }
            }else{
                [arr addObject:dic];
            }
        }else if (updateType==updateTypeDelete){//删除

            for (int i=0; i<arr.count; i++) {
                NSString*dbId=[arr[i]valueForKey:@"id"];
                if ([ID isEqualToString:dbId]) {
                    [arr removeObject:arr[i]];
                    continue;
                }
            }

        }else if (updateType==updateTypeEdit){//改

            for (int i=0; i<arr.count; i++) {
                NSDictionary *d= [arr[i] mj_keyValues];
                NSString *dbId=[d valueForKey:@"id"];
                if ([ID isEqualToString:dbId]) {
                    [arr removeObject:arr[i]];
                    [arr insertObject:dic atIndex:i];
                    continue;
                    //obj=dic;
                }
            }
        }else if (updateType==updateTypeReplace){
            NSMutableArray *a=[NSMutableArray arrayWithObject:dic];
            arr=a;
        }

        //逻辑操作
        NSString *sql=[NSString stringWithFormat:@"update watch set %@='%@' where deviceId=%@",columnName,arr.mj_JSONString,deviceId];
        result=[db executeUpdate:sql];
        result?NSLog(@"操作成功"):NSLog(@"操作失败");
        //todo
    }];
    
    return result;
}
@end
